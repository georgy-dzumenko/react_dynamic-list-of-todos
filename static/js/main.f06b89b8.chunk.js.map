{"version":3,"sources":["components/api.js","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["request","url","fetch","then","response","json","data","TodoList","state","query","filter","className","placeholder","value","this","onChange","event","setState","target","props","todos","todo","title","includes","toLocaleLowerCase","completed","map","key","id","type","checked","readOnly","onClick","chooseUser","userId","React","Component","CurrentUser","user","a","updateUserInfo","find","person","name","email","phone","style","position","transform","left","marginTop","onClear","App","selectedUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f06b89b8.chunk.js","sourcesContent":["const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = url => fetch(`${BASE_URL}${url}`)\n  .then(response => response.json())\n  .then(response => response.data);\n","import React from 'react';\nimport './TodoList.scss';\n\nimport PropTypes from 'prop-types';\n\nexport class TodoList extends React.Component {\n  state = {\n    query: '',\n    filter: '',\n  }\n\n  render() {\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <div\n          className=\"TodoList__filtersBlock\"\n        >\n          <div\n            className=\"TodoList__filtersInnerContainer\"\n          >\n            <input\n              placeholder=\"enter todo title\"\n              className=\"TodoList__search inputField\"\n              value={this.state.query}\n              onChange={(event) => {\n                this.setState({\n                  query: event.target.value,\n                });\n              }}\n            />\n            <select\n              className=\"TodoList__select inputField\"\n              onChange={(event) => {\n                this.setState({\n                  filter: event.target.value,\n                });\n              }}\n            >\n              <option>\n                all\n              </option>\n              <option\n                value=\"active\"\n              >\n                active\n              </option>\n              <option\n                value=\"completed\"\n              >\n                completed\n              </option>\n            </select>\n          </div>\n        </div>\n        <ul className=\"TodoList__list\">\n          {\n            this.props.todos.filter(todo => (\n              (todo.title !== null\n              && todo.title.includes(this.state.query.toLocaleLowerCase()))\n              || this.state.query.toLocaleLowerCase() === ''\n            )).filter((todo) => {\n              if (this.state.filter === 'active') {\n                return !todo.completed;\n              }\n\n              if (this.state.filter === 'completed') {\n                return todo.completed;\n              }\n\n              return true;\n            }).map(todo => (\n              <li\n                className={todo.completed\n                  ? 'TodoList__item TodoList__item--checked'\n                  : 'TodoList__item TodoList__item--unchecked'\n                }\n                key={todo.id}\n              >\n                <label>\n                  <input type=\"checkbox\" checked={todo.completed} readOnly />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className=\"\n                    TodoList__user-button\n                    TodoList__user-button--selected\n                    button\n                  \"\n                  type=\"button\"\n                  onClick={this.props.chooseUser(todo.userId)}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape().isRequired,\n  ).isRequired,\n  chooseUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './CurrentUser.scss';\n\nimport PropTypes from 'prop-types';\nimport { request } from '../api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  async componentDidMount() {\n    this.updateUserInfo();\n  }\n\n  async componentDidUpdate(props) {\n    if (this.props.userId !== props.userId) {\n      this.updateUserInfo();\n    }\n  }\n\n  async updateUserInfo() {\n    const { userId } = this.props;\n    let user = await request('/users');\n\n    user = user.find(person => person.id === userId);\n    this.setState({ user });\n  }\n\n  render() {\n    return (\n      <div className=\"CurrentUser\">\n        {this.state.user ? (\n          <>\n            <h2 className=\"CurrentUser__title\">\n              <span>\n                Selected user:\n                {this.props.userId}\n              </span>\n            </h2>\n\n            <h3 className=\"CurrentUser__name\">{this.state.user.name}</h3>\n            <p className=\"CurrentUser__email\">{this.state.user.email}</p>\n            <p className=\"CurrentUser__phone\">{this.state.user.phone}</p>\n            <button\n              type=\"button\"\n              style={{\n                position: 'relative',\n                transform: 'translate(-50%)',\n                left: '50%',\n                marginTop: '15px',\n              }}\n              className=\"TodoList__user-button button\"\n              onClick={this.props.onClear}\n            >\n              Clear\n            </button>\n          </>\n        ) : 'no such user found'\n        }\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  onClear: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { request } from './components/api';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await request('/todos');\n\n    this.setState({ todos });\n  }\n\n  chooseUser = id => () => {\n    this.setState({\n      selectedUserId: id,\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList todos={todos} chooseUser={this.chooseUser} />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                onClear={this.chooseUser(0)}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}